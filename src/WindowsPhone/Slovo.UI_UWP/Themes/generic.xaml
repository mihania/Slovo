<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:Slovo.Controls">
  <Style TargetType="local:ReorderListBox">
    <Setter Property="Padding" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ReorderListBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ScrollViewer x:Name="ScrollViewer" Grid.ColumnSpan="2" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" TabNavigation="{TemplateBinding TabNavigation}">
              <ItemsPresenter />
            </ScrollViewer>
            <!-- The DragInterceptor sits on top of the item DragHandles and intercepts drag events
                             so that the capture is not lost when the item container is removed from the panel.
                             Its width must be equal to the width of the item DragHandles. -->
            <Canvas x:Name="DragInterceptor" Grid.Column="1" Margin="{TemplateBinding Padding}" Background="Transparent" VerticalAlignment="Stretch" Width="52">
              <Image x:Name="DragIndicator" Visibility="Collapsed" x:FieldModifier="internal">
                <Image.RenderTransform>
                  <TranslateTransform />
                </Image.RenderTransform>
              </Image>
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:ReorderListBoxItem">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="DragHandleTemplate">
      <Setter.Value>
        <DataTemplate>
          <Canvas Width="52" Height="48" Background="Transparent">
            <Polygon Fill="Gray" Points="16,20 4,20 22,4 22,44 16,44" />
            <Polygon Fill="Gray" Points="32,28 44,28 26,44 26,4 32,4" />
          </Canvas>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ReorderListBoxItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid x:Name="ContentContainer" Grid.Row="1" Background="{TemplateBinding Background}">
              <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
            </Grid>
            <Grid x:Name="DropBeforeSpace" Grid.Row="0" Grid.ColumnSpan="2" Height="0"></Grid>
            <Grid x:Name="DropAfterSpace" Grid.Row="2" Grid.ColumnSpan="2" Height="0"></Grid>
            <Grid x:Name="HandleContainer" Grid.Row="1" Grid.Column="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
              <ContentPresenter x:Name="DragHandle" Width="52" VerticalAlignment="Center" ContentTemplate="{TemplateBinding DragHandleTemplate}" x:FieldModifier="internal" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ReorderEnabledStates" x:FieldModifier="internal">
                <VisualState x:Name="ReorderDisabled" x:FieldModifier="internal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="DragHandle" Storyboard.TargetProperty="Width" To="0" Duration="0" EnableDependentAnimation="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReorderEnabled" x:FieldModifier="internal" />
                <VisualStateGroup.Transitions>
                  <VisualTransition From="ReorderDisabled" To="ReorderEnabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DragHandle" Storyboard.TargetProperty="Width" To="52" Duration="0:0:0.4" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ReorderEnabled" To="ReorderDisabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DragHandle" Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.4" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DraggingStates" x:FieldModifier="internal">
                <VisualState x:Name="NotDragging" x:FieldModifier="internal" />
                <VisualState x:Name="Dragging" x:FieldModifier="internal">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#60808080" Duration="0" />
                    <ColorAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#60808080" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0" EnableDependentAnimation="True" />
                    <DoubleAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0" EnableDependentAnimation="True" />
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NotDragging">
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" From="#60808080" Duration="0:0:0.2" />
                      <ColorAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" From="#60808080" Duration="0:0:0.2" />
                      <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" From="0.7" Duration="0:0:0.2" EnableDependentAnimation="True" />
                      <DoubleAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="Opacity" From="0.7" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition To="Dragging">
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#60808080" Duration="0:0:0.2" />
                      <ColorAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#60808080" Duration="0:0:0.2" />
                      <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.2" EnableDependentAnimation="True" />
                      <DoubleAnimation Storyboard.TargetName="HandleContainer" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropIndicatorStates" x:FieldModifier="internal">
                <VisualState x:Name="NoDropIndicator" x:FieldModifier="internal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="0" Duration="0" EnableDependentAnimation="True" />
                    <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="0" Duration="0" EnableDependentAnimation="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropBeforeIndicator" x:FieldModifier="internal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="1" Duration="0" EnableDependentAnimation="True" />
                    <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="0" Duration="0" EnableDependentAnimation="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropAfterIndicator" x:FieldModifier="internal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="0" Duration="0" EnableDependentAnimation="True" />
                    <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="1" Duration="0" EnableDependentAnimation="True" />
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="NoDropIndicator" To="DropBeforeIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="1" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="NoDropIndicator" To="DropAfterIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="1" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="DropBeforeIndicator" To="NoDropIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="DropAfterIndicator" To="NoDropIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="DropBeforeIndicator" To="DropAfterIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.2" EnableDependentAnimation="True" />
                      <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="1" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="DropAfterIndicator" To="DropBeforeIndicator">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DropBeforeSpace" Storyboard.TargetProperty="Height" To="1" Duration="0:0:0.2" EnableDependentAnimation="True" />
                      <DoubleAnimation Storyboard.TargetName="DropAfterSpace" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.2" EnableDependentAnimation="True" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:ClearableTextBox">
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ClearableTextBox">
          <Grid HorizontalAlignment="Stretch" x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="VisualStates" x:FieldModifier="internal">
                <VisualState x:Name="Normal" x:FieldModifier="internal"></VisualState>
                <VisualState x:Name="Cleared" x:FieldModifier="internal">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="clearBtn">
                      <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFDA5454" />
                      <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{TemplateBinding Foreground}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- The Edit Item [TextBox]-->
            <TextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="editBox" IsEnabled="{TemplateBinding IsEnabled}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Text}" />
            <!-- The clear item [Button] -->
            <Button x:Name="clearBtn" IsEnabled="{TemplateBinding IsEnabled}" Opacity=".8" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding ClearButtonContent}" Template="{TemplateBinding ClearButtonTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ClearButtonContent" Value="X" />
    <Setter Property="ClearButtonTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <TextBlock FontSize="25" Margin="0 0 25 0" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" FontWeight="Bold" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>